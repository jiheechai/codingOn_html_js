<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <script src="/socket.io/socket.io.js"></script>
</head>
<body>
    <h3>채팅방</h3>
    <div id="room">
        <form id="room-form">
            <input type="text" id="userName" placeholder="사용자 이름 입력" />
            <input type="text" id="roomName" placeholder="채팅방 만들기" />
            <button>입장</button>
        </form>
        <ul id="room-list"></ul>
    </div>
    
    <div id="chat" hidden>
        <div id="message">
            <div id="notice"></div>
        </div>

        <form id="chat-form">
            <input type="text" id="chat-message" placeholder="메세지 입력" />
            <button>입력</button>
        </form>
    </div>

    <script>
        const socket = io();
        const roomForm = document.querySelector('#room-form');
        const chatForm = document.querySelector('#chat-form');
        const notice = document.querySelector('#notice');
        const message = document.querySelector('#message');
        // const user = document.querySelector('#userName');

        //룸 폼 이벤트
        roomForm.addEventListener('submit', (e) => {
            e.preventDefault();
            const roomName = roomForm.querySelector('#roomName').value;
            const userName = roomForm.querySelector('#userName').value;

            if(roomName === '' || userName === '') {
                alert('방이름과 닉네임을 적어주세요.');
                return ;
            }
            socket.emit('create', { roomName, userName });
            const room = document.querySelector('#room');
            const chat = document.querySelector('#chat');
            room.hidden = true;
            chat.hidden = false;
        });

        //소켓이벤트
        socket.on('notice', (arg) => {
            console.log(arg);
            const p = document.createElement('p');
            p.textContent = arg;
            notice.appendChild(p);
        });

        socket.on('roomList', (arg) => {
            const roomList = document.querySelector('#room-list');
            roomList.textContent = '';
            console.log(arg);
            arg.forEach((room) => {
                const li = document.createElement('li');
                li.textContent = room;
                roomList.appendChild(li);
            });
        });

        //채팅 폼 이벤트
        chatForm.addEventListener('submit', (e) => {
            const userName = roomForm.querySelector('#userName').value;
            e.preventDefault();
            const msg = chatForm.querySelector('#chat-message');
            socket.emit('sendMessage', {message : msg.value, userName});
            msg.value = '';
        });

        socket.on('newMessage', (arg) => {
            const p = document.createElement('p');
            const msg = arg.userName + " : " + arg.message
            p.textContent = msg;
            message.appendChild(p);
        })

    </script>
</body>
</html>